/*******************************************************************************
 * The MIT License (MIT)
 *
 * Copyright (c)2015 Neustar Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *******************************************************************************/

Running EPP Test Server/Client with TCP/TLS as Transport
========================================================

1. Requirements:

   o  XERCES-C++ Version 1.5.1

          http://xml.apache.org/xerces-c/index.html

   o  OPENSSL Version 0.9.6a

          http://www.openssl.org/source/

   o  Platforms supported:

      LINUX          : G++ 2.96
      HPUX 11.0      : aCC: HP ANSI C++ B3910B A.03.50
      SOLARIS 2.7/2.8: G++ 2.95.2 or SC 4.2
      WINDOWS        : MS VC++ 6.0 (CL 12.00.8168)

      Note: For WINDOWS, the executables must be built with /MD or /MDd option.

2. Install the binary package:

      LINUX: epp-c-linux-g++-0.4.1.zip or epp-c-linux-g++-0.4.1.tar.gz
      HPUX : epp-c-hpux-aCC-0.4.1.zip  or epp-c-hpux-aCC-0.4.1.tar.gz

   The package includes the following subdirectories:

	./lib     - EPP C++ API library
	./include - EPP C++ API header files
	./docs    - EPP C++ API online documents
	./xsd     - EPP XML Schema files and sample XML files
	./test    - sample code (test client and server)

3. Configure your compile command to include the EPP C++ API header files,
   and your link command for including EPP C++ API library, OPENSSL libraries
   and XERCES-C library.

   Compile sample code in the ./test directory.

4. The testkeys.* files contains the test certicates for running the
   EPP Test Server and Client with TCP/TLS as the transport. It must reside
   in the same directory where the test server is running.

       testkeys.server.public.pem  - server public key
       testkeys.server.private.pem - server private key
       testkeys.client.public.pem  - client public key
       testkeys.client.private.pem - client private key

5. The EPP .xsd files must reside in the same directory where the test server
   and client are running.

7. Start the test server

        ./EppTestServerTcp [port [notls]]

   where port is the port number to which the test server is listening,
   with default as 10288, and notls is optional for indicating if TLS is not
   used for transport layer security. For example:

        ./EppTestServerTcp

   If you want to start the server without TLS, the command would be:

        ./EppTestServerTcp 10288 notls

8. After the test server is started, i.e. after the message like

        Server started ...

   showed up, start the test client:

        ./EppTestSSL [[[hostname] port] notls]

   where hostname is the name of the host on which the test server is running,
   with default as "localhost", and port is the port number on the server to
   which the client is connected, with default as 1028. If the notls option
   is supplied, the transport could be using TCP without TLS.

   If both the client and server are running on the same machine, the hostname
   can be specified as "localhost". For example:

        ./EppTestSSL localhost 10288

   If the server does not require TLS, the command would be:

	./EppTestSSL localhost 10288 notls

--EOF-- $Id: RunTestTcp,v 1.1 2005/12/06 20:11:37 wtan Exp $
